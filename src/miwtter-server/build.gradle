plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.4.32'
    // ASSUMES GRADLE 5.6 OR HIGHER. Use plugin version 0.8.10 with earlier gradle versions
    id 'com.google.protobuf' version '0.8.15'
}

group 'es.uniovi.miw.miwtter'
version '1.0'

def grpcVersion = '1.37.0'
def protobufVersion = '3.12.0'
def protocVersion = protobufVersion

repositories {
    mavenCentral()
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib"
    implementation 'io.github.microutils:kotlin-logging-jvm:2.0.6'
    implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.30'
    implementation group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.30'

    compile "io.grpc:grpc-netty:${grpcVersion}"
    compile "io.grpc:grpc-protobuf:${grpcVersion}"
    compile "io.grpc:grpc-stub:${grpcVersion}"
    compile group: 'com.google.protobuf', name: 'protobuf-java-util', version: '3.12.2'

    compileOnly group: "javax.annotation", name: "javax.annotation-api", version: "1.3.2"
    compileOnly group: "org.jetbrains", name: "annotations", version: "13.0"

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'

    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
}

test {
    useJUnitPlatform()
}

protobuf {
    protoc { artifact = "com.google.protobuf:protoc:${protocVersion}" }
    plugins {
        grpc { artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}" }
    }
    generateProtoTasks {
        all()*.plugins { grpc {} }
    }
}

// Inform IDEs like IntelliJ IDEA, Eclipse or NetBeans about the generated code.
sourceSets {
    main {
        java {
            srcDirs 'build/generated/source/proto/main/grpc'
            srcDirs 'build/generated/source/proto/main/java'
        }
    }
}

task runServer(type: JavaExec) {
    classpath = sourceSets["main"].runtimeClasspath
    main = 'es.uniovi.miw.miwtter.MiwtterServerKt'
}

task authServer(type: CreateStartScripts) {
    mainClassName = "es.uniovi.miw.miwtter.MiwtterServer"
    applicationName = "miwtter-server"
    outputDir = new File(project.buildDir, 'tmp')
    classpath = jar.outputs.files + project.configurations.runtime
}
